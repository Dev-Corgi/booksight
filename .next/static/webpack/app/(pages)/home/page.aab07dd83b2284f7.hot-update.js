"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(pages)/home/page",{

/***/ "(app-pages-browser)/./Handler/aladinISBNSearchHandler.js":
/*!********************************************!*\
  !*** ./Handler/aladinISBNSearchHandler.js ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ aladinISBNSearchHandler; }\n/* harmony export */ });\n/* harmony import */ var _data_aladinData_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @data/aladinData.json */ \"(app-pages-browser)/./Data/aladinData.json\");\n\nasync function aladinISBNSearchHandler(ItemId) {\n    async function aladinISBNSearchHandler(ItemId) {\n        try {\n            const response = await fetch(\"https://localhost:3001/api/aladinISBNSearch?ItemId=\".concat(ItemId));\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch aladinISBNSearch\");\n            }\n            const result = await response.json();\n            return result;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    function getAuthor(author) {\n        const authorInput = author;\n        const pattern = /^(.*?)\\s*\\(지은이\\)/;\n        return authorInput.match(pattern)[1];\n    }\n    // const aladinISBNSearchResult = await aladinISBNSearchHandler(ItemId);\n    // return aladinISBNSearchResult.item[0];\n    const result = JSON.parse(JSON.stringify(_data_aladinData_json__WEBPACK_IMPORTED_MODULE_0__[ItemId].item[0]));\n    result.author = getAuthor(result.author);\n    return result;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL0hhbmRsZXIvYWxhZGluSVNCTlNlYXJjaEhhbmRsZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFFaEMsZUFBZUMsd0JBQXdCQyxNQUFNO0lBRTFELGVBQWVELHdCQUF3QkMsTUFBTTtRQUUzQyxJQUFJO1lBQ0YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLHNEQUE2RCxPQUFQRjtZQUVuRixJQUFJLENBQUNDLFNBQVNFLEVBQUUsRUFBRTtnQkFDaEIsTUFBTSxJQUFJQyxNQUFNO1lBQ2xCO1lBRUEsTUFBTUMsU0FBUyxNQUFNSixTQUFTSyxJQUFJO1lBRWxDLE9BQU9EO1FBQ1QsRUFBRSxPQUFPRSxPQUFPO1lBQ2RDLFFBQVFDLEdBQUcsQ0FBQ0Y7UUFDZDtJQUNGO0lBRUEsU0FBU0csVUFBVUMsTUFBTTtRQUN2QixNQUFNQyxjQUFjRDtRQUNwQixNQUFNRSxVQUFVO1FBRWhCLE9BQU9ELFlBQVlFLEtBQUssQ0FBQ0QsUUFBUSxDQUFDLEVBQUU7SUFDcEM7SUFFRix3RUFBd0U7SUFDeEUseUNBQXlDO0lBRXpDLE1BQU1SLFNBQVNVLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsU0FBUyxDQUFDbkIsa0RBQVUsQ0FBQ0UsT0FBTyxDQUFDa0IsSUFBSSxDQUFDLEVBQUU7SUFDbkViLE9BQU9NLE1BQU0sR0FBR0QsVUFBVUwsT0FBT00sTUFBTTtJQUN2QyxPQUFPTjtBQUlUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL0hhbmRsZXIvYWxhZGluSVNCTlNlYXJjaEhhbmRsZXIuanM/NDg2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYWxhZGluRGF0YSBmcm9tIFwiQGRhdGEvYWxhZGluRGF0YS5qc29uXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBhbGFkaW5JU0JOU2VhcmNoSGFuZGxlcihJdGVtSWQpIHtcclxuXHJcbiAgYXN5bmMgZnVuY3Rpb24gYWxhZGluSVNCTlNlYXJjaEhhbmRsZXIoSXRlbUlkKSB7XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9sb2NhbGhvc3Q6MzAwMS9hcGkvYWxhZGluSVNCTlNlYXJjaD9JdGVtSWQ9JHtJdGVtSWR9YCk7XHJcblxyXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIGFsYWRpbklTQk5TZWFyY2hcIik7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuXHJcbiAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnZXRBdXRob3IoYXV0aG9yKXtcclxuICAgIGNvbnN0IGF1dGhvcklucHV0ID0gYXV0aG9yO1xyXG4gICAgY29uc3QgcGF0dGVybiA9IC9eKC4qPylcXHMqXFwo7KeA7J2A7J20XFwpLztcclxuXHJcbiAgICByZXR1cm4gYXV0aG9ySW5wdXQubWF0Y2gocGF0dGVybilbMV07XHJcbiAgICB9XHJcblxyXG4gIC8vIGNvbnN0IGFsYWRpbklTQk5TZWFyY2hSZXN1bHQgPSBhd2FpdCBhbGFkaW5JU0JOU2VhcmNoSGFuZGxlcihJdGVtSWQpO1xyXG4gIC8vIHJldHVybiBhbGFkaW5JU0JOU2VhcmNoUmVzdWx0Lml0ZW1bMF07XHJcblxyXG4gIGNvbnN0IHJlc3VsdCA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoYWxhZGluRGF0YVtJdGVtSWRdLml0ZW1bMF0pKTtcclxuICByZXN1bHQuYXV0aG9yID0gZ2V0QXV0aG9yKHJlc3VsdC5hdXRob3IpO1xyXG4gIHJldHVybiByZXN1bHQ7XHJcblxyXG5cclxuXHJcbn1cclxuIl0sIm5hbWVzIjpbImFsYWRpbkRhdGEiLCJhbGFkaW5JU0JOU2VhcmNoSGFuZGxlciIsIkl0ZW1JZCIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsIkVycm9yIiwicmVzdWx0IiwianNvbiIsImVycm9yIiwiY29uc29sZSIsImxvZyIsImdldEF1dGhvciIsImF1dGhvciIsImF1dGhvcklucHV0IiwicGF0dGVybiIsIm1hdGNoIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiaXRlbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./Handler/aladinISBNSearchHandler.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./Handler/aladinKeywordSearchHandler.js":
/*!***********************************************!*\
  !*** ./Handler/aladinKeywordSearchHandler.js ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ aladinKeywordSearchHandler; }\n/* harmony export */ });\n/* harmony import */ var _data_keywordSearchResult_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @data/keywordSearchResult.json */ \"(app-pages-browser)/./Data/keywordSearchResult.json\");\n\nasync function aladinKeywordSearchHandler(SearchWord) {\n    async function aladinKeywordSearchHandler(SearchWord) {\n        try {\n            const response = await fetch(\"https://localhost:3001/api/aladinKeywordSearch?SearchWord=\".concat(SearchWord));\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch aladinKeywordSearch\");\n            }\n            const result = await response.json();\n            return result;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    function getAuthor(author) {\n        const authorInput = author;\n        const pattern = /^(.*?)\\s*\\(지은이\\)/;\n        return authorInput.match(pattern)[1];\n    }\n    // const aladinISBNSearchResult = await aladinKeywordSearchHandler(SearchWord);\n    // return aladinISBNSearchResult.item;\n    const result = JSON.parse(JSON.stringify(_data_keywordSearchResult_json__WEBPACK_IMPORTED_MODULE_0__.item));\n    for (const book of result){\n        book.author = getAuthor(book.author);\n    }\n    return result;\n    return _data_keywordSearchResult_json__WEBPACK_IMPORTED_MODULE_0__.item;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL0hhbmRsZXIvYWxhZGluS2V5d29yZFNlYXJjaEhhbmRsZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0U7QUFFckQsZUFBZUMsMkJBQTJCQyxVQUFVO0lBRWpFLGVBQWVELDJCQUEyQkMsVUFBVTtRQUVsRCxJQUFJO1lBQ0YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLDZEQUF3RSxPQUFYRjtZQUUxRixJQUFJLENBQUNDLFNBQVNFLEVBQUUsRUFBRTtnQkFDaEIsTUFBTSxJQUFJQyxNQUFNO1lBQ2xCO1lBRUEsTUFBTUMsU0FBUyxNQUFNSixTQUFTSyxJQUFJO1lBRWxDLE9BQU9EO1FBQ1QsRUFBRSxPQUFPRSxPQUFPO1lBQ2RDLFFBQVFDLEdBQUcsQ0FBQ0Y7UUFDZDtJQUNGO0lBRUEsU0FBU0csVUFBVUMsTUFBTTtRQUN2QixNQUFNQyxjQUFjRDtRQUNwQixNQUFNRSxVQUFVO1FBRWhCLE9BQU9ELFlBQVlFLEtBQUssQ0FBQ0QsUUFBUSxDQUFDLEVBQUU7SUFDcEM7SUFFRiwrRUFBK0U7SUFDL0Usc0NBQXNDO0lBRXRDLE1BQU1SLFNBQVNVLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsU0FBUyxDQUFDbkIsZ0VBQTRCO0lBQ3JFLEtBQUksTUFBTXFCLFFBQVFkLE9BQU87UUFDdkJjLEtBQUtSLE1BQU0sR0FBR0QsVUFBVVMsS0FBS1IsTUFBTTtJQUNyQztJQUNBLE9BQU9OO0lBRVAsT0FBT1AsZ0VBQTRCO0FBS3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL0hhbmRsZXIvYWxhZGluS2V5d29yZFNlYXJjaEhhbmRsZXIuanM/MjM3NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQga2V5d29yZFNlYXJjaFJlc3VsdERhdGEgZnJvbSBcIkBkYXRhL2tleXdvcmRTZWFyY2hSZXN1bHQuanNvblwiXHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBhbGFkaW5LZXl3b3JkU2VhcmNoSGFuZGxlcihTZWFyY2hXb3JkKSB7XHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIGFsYWRpbktleXdvcmRTZWFyY2hIYW5kbGVyKFNlYXJjaFdvcmQpIHtcclxuXHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwczovL2xvY2FsaG9zdDozMDAxL2FwaS9hbGFkaW5LZXl3b3JkU2VhcmNoP1NlYXJjaFdvcmQ9JHtTZWFyY2hXb3JkfWApO1xyXG5cclxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCBhbGFkaW5LZXl3b3JkU2VhcmNoXCIpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcblxyXG4gICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ2V0QXV0aG9yKGF1dGhvcil7XHJcbiAgICBjb25zdCBhdXRob3JJbnB1dCA9IGF1dGhvcjtcclxuICAgIGNvbnN0IHBhdHRlcm4gPSAvXiguKj8pXFxzKlxcKOyngOydgOydtFxcKS87XHJcblxyXG4gICAgcmV0dXJuIGF1dGhvcklucHV0Lm1hdGNoKHBhdHRlcm4pWzFdO1xyXG4gICAgfVxyXG5cclxuICAvLyBjb25zdCBhbGFkaW5JU0JOU2VhcmNoUmVzdWx0ID0gYXdhaXQgYWxhZGluS2V5d29yZFNlYXJjaEhhbmRsZXIoU2VhcmNoV29yZCk7XHJcbiAgLy8gcmV0dXJuIGFsYWRpbklTQk5TZWFyY2hSZXN1bHQuaXRlbTtcclxuXHJcbiAgY29uc3QgcmVzdWx0ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShrZXl3b3JkU2VhcmNoUmVzdWx0RGF0YS5pdGVtKSk7XHJcbiAgZm9yKGNvbnN0IGJvb2sgb2YgcmVzdWx0KXtcclxuICAgIGJvb2suYXV0aG9yID0gZ2V0QXV0aG9yKGJvb2suYXV0aG9yKTtcclxuICB9XHJcbiAgcmV0dXJuIHJlc3VsdDtcclxuXHJcbiAgcmV0dXJuIGtleXdvcmRTZWFyY2hSZXN1bHREYXRhLml0ZW07XHJcblxyXG5cclxuXHJcblxyXG59XHJcbiJdLCJuYW1lcyI6WyJrZXl3b3JkU2VhcmNoUmVzdWx0RGF0YSIsImFsYWRpbktleXdvcmRTZWFyY2hIYW5kbGVyIiwiU2VhcmNoV29yZCIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsIkVycm9yIiwicmVzdWx0IiwianNvbiIsImVycm9yIiwiY29uc29sZSIsImxvZyIsImdldEF1dGhvciIsImF1dGhvciIsImF1dGhvcklucHV0IiwicGF0dGVybiIsIm1hdGNoIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiaXRlbSIsImJvb2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./Handler/aladinKeywordSearchHandler.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./Handler/hotTrendHandler.js":
/*!************************************!*\
  !*** ./Handler/hotTrendHandler.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ hotTrendHandler; }\n/* harmony export */ });\n/* harmony import */ var _data_aladinData_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @data/aladinData.json */ \"(app-pages-browser)/./Data/aladinData.json\");\n/* harmony import */ var _aladinISBNSearchHandler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aladinISBNSearchHandler */ \"(app-pages-browser)/./Handler/aladinISBNSearchHandler.js\");\n\n\nasync function hotTrendHandler() {\n    async function hotTrendHandler(date) {\n        try {\n            const response = await fetch(\"https://localhost:3001/api/hotTrend?searchDt=\".concat(date));\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch hotTrend\");\n            }\n            const result = await response.json();\n            return result;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    function getYesterday() {\n        // Get today's date\n        const today = new Date();\n        // Subtract one day from today\n        const yesterday = new Date(today);\n        yesterday.setDate(today.getDate() - 1);\n        // Format the date as yyyy-mm-dd\n        const yyyy = yesterday.getFullYear();\n        const mm = String(yesterday.getMonth() + 1).padStart(2, \"0\"); // Months are zero-based\n        const dd = String(yesterday.getDate()).padStart(2, \"0\");\n        const formattedYesterday = \"\".concat(yyyy, \"-\").concat(mm, \"-\").concat(dd);\n        return formattedYesterday;\n    }\n    // const hotTrendBooks = await hotTrendHandler(getYesterday());\n    // const result = [];\n    // for (const index in hotTrendBooks.response.results[0].result.docs) {\n    //   const book = hotTrendBooks.response.results[0].result.docs[index];\n    //   const aladinISBNSearchResult = await aladinISBNSearchHandler(\n    //     book.doc.isbn13\n    //   );\n    //   result.push(aladinISBNSearchResult.item[0]);\n    // }\n    const hotTrends = [\n        9791130605210,\n        9791130607887,\n        9791130610658\n    ];\n    const result = await Promise.all(hotTrends.map((isbn13)=>(0,_aladinISBNSearchHandler__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(isbn13)));\n    return [\n        result[0],\n        result[1],\n        result[2]\n    ];\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL0hhbmRsZXIvaG90VHJlbmRIYW5kbGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQztBQUNpQjtBQUVqRCxlQUFlRTtJQUM1QixlQUFlQSxnQkFBZ0JDLElBQUk7UUFDakMsSUFBSTtZQUNGLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSxnREFBcUQsT0FBTEY7WUFFN0UsSUFBSSxDQUFDQyxTQUFTRSxFQUFFLEVBQUU7Z0JBQ2hCLE1BQU0sSUFBSUMsTUFBTTtZQUNsQjtZQUVBLE1BQU1DLFNBQVMsTUFBTUosU0FBU0ssSUFBSTtZQUVsQyxPQUFPRDtRQUNULEVBQUUsT0FBT0UsT0FBTztZQUNkQyxRQUFRQyxHQUFHLENBQUNGO1FBQ2Q7SUFDRjtJQUVBLFNBQVNHO1FBQ1AsbUJBQW1CO1FBQ25CLE1BQU1DLFFBQVEsSUFBSUM7UUFFbEIsOEJBQThCO1FBQzlCLE1BQU1DLFlBQVksSUFBSUQsS0FBS0Q7UUFDM0JFLFVBQVVDLE9BQU8sQ0FBQ0gsTUFBTUksT0FBTyxLQUFLO1FBRXBDLGdDQUFnQztRQUNoQyxNQUFNQyxPQUFPSCxVQUFVSSxXQUFXO1FBQ2xDLE1BQU1DLEtBQUtDLE9BQU9OLFVBQVVPLFFBQVEsS0FBSyxHQUFHQyxRQUFRLENBQUMsR0FBRyxNQUFNLHdCQUF3QjtRQUN0RixNQUFNQyxLQUFLSCxPQUFPTixVQUFVRSxPQUFPLElBQUlNLFFBQVEsQ0FBQyxHQUFHO1FBRW5ELE1BQU1FLHFCQUFxQixHQUFXTCxPQUFSRixNQUFLLEtBQVNNLE9BQU5KLElBQUcsS0FBTSxPQUFISTtRQUU1QyxPQUFPQztJQUNUO0lBRUEsK0RBQStEO0lBQy9ELHFCQUFxQjtJQUVyQix1RUFBdUU7SUFDdkUsdUVBQXVFO0lBQ3ZFLGtFQUFrRTtJQUNsRSxzQkFBc0I7SUFDdEIsT0FBTztJQUNQLGlEQUFpRDtJQUNqRCxJQUFJO0lBRUosTUFBTUMsWUFBWTtRQUFDO1FBQWM7UUFBYztLQUFjO0lBRTdELE1BQU1uQixTQUFTLE1BQU1vQixRQUFRQyxHQUFHLENBQzlCRixVQUFVRyxHQUFHLENBQUMsQ0FBQ0MsU0FBVzlCLG9FQUF1QkEsQ0FBQzhCO0lBR3BELE9BQU87UUFBQ3ZCLE1BQU0sQ0FBQyxFQUFFO1FBQUVBLE1BQU0sQ0FBQyxFQUFFO1FBQUVBLE1BQU0sQ0FBQyxFQUFFO0tBQUM7QUFHMUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vSGFuZGxlci9ob3RUcmVuZEhhbmRsZXIuanM/Nzk5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYWxhZGluRGF0YSBmcm9tIFwiQGRhdGEvYWxhZGluRGF0YS5qc29uXCI7XHJcbmltcG9ydCBhbGFkaW5JU0JOU2VhcmNoSGFuZGxlciBmcm9tIFwiLi9hbGFkaW5JU0JOU2VhcmNoSGFuZGxlclwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaG90VHJlbmRIYW5kbGVyKCkge1xyXG4gIGFzeW5jIGZ1bmN0aW9uIGhvdFRyZW5kSGFuZGxlcihkYXRlKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwczovL2xvY2FsaG9zdDozMDAxL2FwaS9ob3RUcmVuZD9zZWFyY2hEdD0ke2RhdGV9YCk7XHJcblxyXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIGhvdFRyZW5kXCIpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcblxyXG4gICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ2V0WWVzdGVyZGF5KCkge1xyXG4gICAgLy8gR2V0IHRvZGF5J3MgZGF0ZVxyXG4gICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xyXG5cclxuICAgIC8vIFN1YnRyYWN0IG9uZSBkYXkgZnJvbSB0b2RheVxyXG4gICAgY29uc3QgeWVzdGVyZGF5ID0gbmV3IERhdGUodG9kYXkpO1xyXG4gICAgeWVzdGVyZGF5LnNldERhdGUodG9kYXkuZ2V0RGF0ZSgpIC0gMSk7XHJcblxyXG4gICAgLy8gRm9ybWF0IHRoZSBkYXRlIGFzIHl5eXktbW0tZGRcclxuICAgIGNvbnN0IHl5eXkgPSB5ZXN0ZXJkYXkuZ2V0RnVsbFllYXIoKTtcclxuICAgIGNvbnN0IG1tID0gU3RyaW5nKHllc3RlcmRheS5nZXRNb250aCgpICsgMSkucGFkU3RhcnQoMiwgXCIwXCIpOyAvLyBNb250aHMgYXJlIHplcm8tYmFzZWRcclxuICAgIGNvbnN0IGRkID0gU3RyaW5nKHllc3RlcmRheS5nZXREYXRlKCkpLnBhZFN0YXJ0KDIsIFwiMFwiKTtcclxuXHJcbiAgICBjb25zdCBmb3JtYXR0ZWRZZXN0ZXJkYXkgPSBgJHt5eXl5fS0ke21tfS0ke2RkfWA7XHJcblxyXG4gICAgcmV0dXJuIGZvcm1hdHRlZFllc3RlcmRheVxyXG4gIH1cclxuXHJcbiAgLy8gY29uc3QgaG90VHJlbmRCb29rcyA9IGF3YWl0IGhvdFRyZW5kSGFuZGxlcihnZXRZZXN0ZXJkYXkoKSk7XHJcbiAgLy8gY29uc3QgcmVzdWx0ID0gW107XHJcblxyXG4gIC8vIGZvciAoY29uc3QgaW5kZXggaW4gaG90VHJlbmRCb29rcy5yZXNwb25zZS5yZXN1bHRzWzBdLnJlc3VsdC5kb2NzKSB7XHJcbiAgLy8gICBjb25zdCBib29rID0gaG90VHJlbmRCb29rcy5yZXNwb25zZS5yZXN1bHRzWzBdLnJlc3VsdC5kb2NzW2luZGV4XTtcclxuICAvLyAgIGNvbnN0IGFsYWRpbklTQk5TZWFyY2hSZXN1bHQgPSBhd2FpdCBhbGFkaW5JU0JOU2VhcmNoSGFuZGxlcihcclxuICAvLyAgICAgYm9vay5kb2MuaXNibjEzXHJcbiAgLy8gICApO1xyXG4gIC8vICAgcmVzdWx0LnB1c2goYWxhZGluSVNCTlNlYXJjaFJlc3VsdC5pdGVtWzBdKTtcclxuICAvLyB9XHJcblxyXG4gIGNvbnN0IGhvdFRyZW5kcyA9IFs5NzkxMTMwNjA1MjEwLDk3OTExMzA2MDc4ODcsOTc5MTEzMDYxMDY1OF07XHJcblxyXG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IFByb21pc2UuYWxsKFxyXG4gICAgaG90VHJlbmRzLm1hcCgoaXNibjEzKSA9PiBhbGFkaW5JU0JOU2VhcmNoSGFuZGxlcihpc2JuMTMpKVxyXG4gICk7XHJcblxyXG4gIHJldHVybiBbcmVzdWx0WzBdLCByZXN1bHRbMV0sIHJlc3VsdFsyXV07XHJcblxyXG5cclxufVxyXG4iXSwibmFtZXMiOlsiYWxhZGluRGF0YSIsImFsYWRpbklTQk5TZWFyY2hIYW5kbGVyIiwiaG90VHJlbmRIYW5kbGVyIiwiZGF0ZSIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsIkVycm9yIiwicmVzdWx0IiwianNvbiIsImVycm9yIiwiY29uc29sZSIsImxvZyIsImdldFllc3RlcmRheSIsInRvZGF5IiwiRGF0ZSIsInllc3RlcmRheSIsInNldERhdGUiLCJnZXREYXRlIiwieXl5eSIsImdldEZ1bGxZZWFyIiwibW0iLCJTdHJpbmciLCJnZXRNb250aCIsInBhZFN0YXJ0IiwiZGQiLCJmb3JtYXR0ZWRZZXN0ZXJkYXkiLCJob3RUcmVuZHMiLCJQcm9taXNlIiwiYWxsIiwibWFwIiwiaXNibjEzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./Handler/hotTrendHandler.js\n"));

/***/ })

});